#cloud-config
users:
  - name: ${username}
    groups: sudo
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    lock_passwd: true
    ssh_authorized_keys:
      - ${ssh_public_key}
  - name: ubuntu
    groups: sudo
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    lock_passwd: true
    ssh_authorized_keys:
      - ${ssh_public_key}

package_update: true
package_upgrade: true

packages:
  - curl
  - wget
  - git
  - unzip
  - htop
  - vim
  - docker.io
  - ufw

write_files:
  - path: /tmp/k3d-ha-setup.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      
      # Configure firewall
      ufw allow 22/tcp
      ufw allow 6443/tcp
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw allow 8080/tcp
      ufw --force enable
      
      # Add user to docker group
      usermod -aG docker ${username}
      systemctl enable docker
      systemctl start docker
      
      # Install K3d (latest version)
      curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
      
      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
      chmod +x kubectl
      mv kubectl /usr/local/bin/
      
      # Install Helm
      curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      
      # Wait for Docker to be ready
      sleep 10
      
      # Create K3d HA cluster
      k3d cluster create k3s-ha-cluster \
        --servers ${k3d_masters} \
        --agents ${k3d_workers} \
        --port "8080:80@loadbalancer" \
        --port "8443:443@loadbalancer" \
        --port "6443:6443@loadbalancer" \
        --image rancher/k3s:latest \
        --k3s-arg "--disable=traefik@server:*" \
        --k3s-arg "--disable=servicelb@server:*" \
        --wait
      
      # Set up kubeconfig for user
      mkdir -p /home/${username}/.kube
      k3d kubeconfig get k3s-ha-cluster > /home/${username}/.kube/config
      chown ${username}:${username} /home/${username}/.kube/config
      
      # Install Nginx Ingress Controller
      kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml
      
      # Wait for ingress controller
      kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=300s || true
      
      echo "K3d HA cluster setup completed"

runcmd:
  - /tmp/k3d-ha-setup.sh

final_message: "K3d HA cluster setup completed - ${k3d_masters} masters + ${k3d_workers} workers ready"